{
  "_args": [
    [
      "big-time@https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
      "/home/soumita/Desktop/hapi_js/node_modules/hapi"
    ]
  ],
  "_from": "big-time@https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
  "_id": "big-time@2.0.1",
  "_inCache": true,
  "_location": "/hapi/big-time",
  "_phantomChildren": {},
  "_requested": {
    "name": "big-time",
    "raw": "big-time@https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hapi/catbox-memory"
  ],
  "_resolved": "https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
  "_shasum": "68c7df8dc30f97e953f25a67a76ac9713c16c9de",
  "_shrinkwrap": null,
  "_spec": "big-time@https://registry.npmjs.org/big-time/-/big-time-2.0.1.tgz",
  "_where": "/home/soumita/Desktop/hapi_js/node_modules/hapi",
  "author": {
    "email": "arbretz@gmail.com",
    "name": "Adam Bretz"
  },
  "bugs": {
    "url": "https://github.com/arb/big-time/issues"
  },
  "dependencies": {},
  "description": "Big time makes it possible to have a timeout that is longer than 24.8 days (2^31-1 milliseconds).",
  "devDependencies": {
    "belly-button": "4.x.x",
    "lab": "14.x.x"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "homepage": "https://github.com/arb/big-time",
  "license": "MIT",
  "main": "lib/index.js",
  "name": "big-time",
  "optionalDependencies": {},
  "readme": "# Big-Time\n\n[![Current Version](https://img.shields.io/npm/v/big-time.svg)](https://www.npmjs.org/package/big-time)\n[![Build Status via Travis CI](https://travis-ci.org/arb/big-time.svg?branch=master)](https://travis-ci.org/arb/big-time)\n[![belly-button-style](https://img.shields.io/badge/eslint-bellybutton-4B32C3.svg)](https://github.com/continuationlabs/belly-button)\n\n\nReworking of [long-timeout](https://github.com/tellnes/long-timeout) that has more features, follows correct semver, and has unit tests. Big-Time is a custom timer class to allow really long values into `setTimeout` that are larger than JavaScript would normally support (2^31-1).\n\n## Usage\n\n```js\n'use strict';\nconst bt = require('big-time');\n\nbt.setTimeout(() => {\n  console.log('if you wait for this, it will eventually log');\n}, Number.MAX_VALUE);\n\nconst timer = bt.setTimeout(() => {\n  console.log('shorter');\n}, 1000);\nbt.clearTimeout(timer);\n```\n\n## API\n\n### `bt.setTimeout(callback, delay, [arg1, arg2, arg3,...])`\n\nCreates a new Big-Time timer object and starts the timer where:\n\n- `callback` - the function to execute after `delay` milliseconds has passed. `callback` will be called with `arg1, arg2, arg3...` if they are passed into `setTimeout`, exactly like native `setTimeout`\n- `delay` - an integer representing the number of milliseconds to wait before executing `callback`. Alternatively, a `Date` instance can be provided. In this scenario, the delay is computed by subtracting `Date.now()` from the `Date` instance.\n- `[arg1, arg2, arg3,...]` - optional `N` number of extra parameters that will be passed back into `callback`.\n\n### `bt.clearTimeout(timer)`\n\nClears a running Big-Time object.\n\n### `Timeout.prototype.ref()`\n\nWhen called, requests that the Node.js event loop not exit so long as the\n`Timeout` is active. Calling `timeout.ref()` multiple times will have no effect.\n\nBy default, all `Timeout` objects are \"ref'd\", making it normally unnecessary to\ncall `timeout.ref()` unless `timeout.unref()` had been called previously.\n\nReturns a reference to the `Timeout`.\n\n### `Timeout.prototype.unref()`\n\nWhen called, the active `Timeout` object will not require the Node.js event loop\nto remain active. If there is no other activity keeping the event loop running,\nthe process may exit before the `Timeout` object's callback is invoked. Calling\n`timeout.unref()` multiple times will have no effect.\n\nReturns a reference to the `Timeout`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/arb/big-time.git"
  },
  "scripts": {
    "lint": "belly-button -f",
    "test": "npm run lint && lab -v -a code -c -m 10000"
  },
  "version": "2.0.1"
}
